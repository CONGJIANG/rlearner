% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xlasso.R
\name{xlasso}
\alias{xlasso}
\title{X-learner implemented via glmnet (lasso)}
\usage{
xlasso(x, w, y, alpha = 1, k_folds_mu1 = NULL, k_folds_mu0 = NULL,
  k_folds_p = NULL, lambda_choice = c("lambda.min", "lambda.1se"),
  mu1_hat = NULL, mu0_hat = NULL)
}
\arguments{
\item{x}{the input features}

\item{w}{the treatment variable (0 or 1)}

\item{y}{the observed response (real valued)}

\item{alpha}{tuning parameter for the elastic net}

\item{k_folds_mu1}{number of folds for learning E[Y|X,W=1]}

\item{k_folds_mu0}{number of folds for learning E[Y|X,W=0]}

\item{k_folds_p}{number of folds for learning E[W|X]}

\item{lambda_choice}{how to cross-validate; choose from "lambda.min" or "lambda.1se"}

\item{mu1_hat}{pre-computed estimates on E[Y|X,W=1] corresponding to the input x. xlasso will compute it internally if not provided.}

\item{mu0_hat}{pre-computed estimates on E[Y|X,W=0] corresponding to the input x. xlasso will compute it internally if not provided.}
}
\description{
X-learner as proposed by KÃ¼nzel, Sekhon, Bickel, and Yu (2017), implemented via glmnet (lasso)
}
\examples{
\dontrun{
n = 100; p = 10

x = matrix(rnorm(n*p), n, p)
w = rbinom(n, 1, 0.5)
y = pmax(x[,1], 0) * w + x[,2] + pmin(x[,3], 0) + rnorm(n)

xlasso_fit = xlasso(x, w, y)
xlasso_est = predict(xlasso_fit, x)
}


}
