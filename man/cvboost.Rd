% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cvboost.R
\name{cvboost}
\alias{cvboost}
\title{Gradient boosting for regression and classification with cross validation to search for hyper-parameters (implemented with xgboost)}
\usage{
cvboost(X, Y, weights = NULL, nfolds = NULL, objective = c("reg:linear",
  "binary:logistic"), ntrees.max = 1000, num.search.rounds = 10,
  print.every.n = 100, early.stopping.rounds = 10, nthread = NULL,
  bayes.opt = FALSE)
}
\arguments{
\item{X}{the input features}

\item{Y}{the observed response (real valued)}

\item{weights}{weights for input if doing weighted regression/classification. If set to NULL, no weights are used}

\item{nfolds}{number of folds used in cross validation}

\item{objective}{choose from either "reg:linear" for regression or "binary:logistic" for logistic regression}

\item{ntrees.max}{the maximum number of trees to grow for xgboost}

\item{num.search.rounds}{the number of random sampling of hyperparameter combinations for cross validating on xgboost trees}

\item{print.every.n}{the number of iterations (in each iteration, a tree is grown) by which the code prints out information}

\item{early.stopping.rounds}{the number of rounds the test error stops decreasing by which the cross validation in finding the optimal number of trees stops}

\item{nthread}{the number of threads to use. The default is NULL, which uses all available threads}

\item{bayes.opt}{if set to TRUE, use bayesian optimization to do hyper-parameter search in xgboost. if set to FALSE, randomly draw combinations of hyperparameters to search from (as specified by num.search.rounds). Default is FALSE.}
}
\value{
a cvboost object
}
\description{
Gradient boosting for regression and classification with cross validation to search for hyper-parameters (implemented with xgboost)
}
\examples{
\dontrun{
n = 100; p = 10

X = matrix(rnorm(n*p), n, p)
Y = pmax(X[,1], 0) + X[,2] + pmin(X[,3], 0) + rnorm(n)

fit = cvboost(X, Y, objective="reg:linear")
est = predict(fit, X)
}

}
